CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(DemoApplication)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET_PROPERTY(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "CMake Targets")

FUNCTION(MY_FIND_PATH module filename)
	FIND_PATH(${module} ${filename}
		PATH_SUFFIXES include
		PATHS
			/opt
			/usr
			/usr/local
	)
ENDFUNCTION(MY_FIND_PATH module filename)

FUNCTION(MY_FIND_LIBRARY module filename)
	FIND_LIBRARY(${module} ${filename}
		PATH_SUFFIXES
			lib
			lib64
		PATHS
			/opt
			/usr
			/usr/local
	)
ENDFUNCTION(MY_FIND_LIBRARY module filename)

MY_FIND_PATH(GLFW_INCLUDE_DIR GLFW/glfw3.h)
MY_FIND_LIBRARY(GLFW_LIBRARY glfw3)

IF(NOT WIN32)
	FIND_PACKAGE(X11 REQUIRED)

	FIND_PACKAGE(OpenGL REQUIRED)
	ADD_DEFINITIONS(${OpenGL_DEFINITIONS})
	IF(NOT OPENGL_FOUND)
	    MESSAGE(ERROR " OPENGL not found!")
	ENDIF(NOT OPENGL_FOUND)

	MY_FIND_LIBRARY(PTHREAD_LIBRARY pthread)
ENDIF(NOT WIN32)

SET(CMAKE_INCLUDE_PATH CACHE STRING "Put your include dir here...")
SET(CMAKE_LIBRARY_PATH CACHE STRING "Put your lib dir here...")

SET(CMAKE_DEBUG_POSTFIX "d")

ADD_DEFINITIONS(-DGLEW_STATIC)

INCLUDE_DIRECTORIES(
	${CMAKE_INCLUDE_PATH}
	${OpenGL_INCLUDE_DIRS}	
	${GLFW_INCLUDE_DIR}
	${PROJECT_SOURCE_DIR}/3rdParty/glm-0.9.6.1
	${PROJECT_SOURCE_DIR}/3rdParty/glew-1.12.0/include
)

LINK_DIRECTORIES(
	${CMAKE_LIBRARY_PATH}
	${OpenGL_LIBRARY_DIRS}
)

ADD_SUBDIRECTORY(3rdParty/glew-1.12.0)
ADD_SUBDIRECTORY(seminar1)

INSTALL(DIRECTORY ${PROJECT_SOURCE_DIR}/images/ DESTINATION ${CMAKE_INSTALL_PREFIX}/images)
